{"version":3,"file":"background.bundle.js","mappings":"AACAA,OAAOC,QAAQC,YAAYC,YAAYC,UACnC,SAE2BC,WADJL,OAAOM,QAAQC,MAAMC,IAAI,CAAC,eACpCC,kBACHT,OAAOM,QAAQC,MAAMG,IAAI,CAAED,WAAW,IAC5CE,QAAQC,IAAI,iCAEhB,CAAE,MAAOC,GACPF,QAAQE,MAAM,iCAAkCA,EAClD,IAIFb,OAAOC,QAAQa,UAAUX,YAAY,CAACY,EAASC,EAAQC,KAQrD,GAPuB,qBAAnBF,EAAQG,SACVP,QAAQC,IAAI,yBAA0BG,EAAQN,WAelD,SAA6BU,GAC3B,MAAMC,EAAYD,EAAO,KAAO,GAC1BE,EAAaF,EAAO,UAAY,UAGtCnB,OAAOkB,OAAOI,aAAa,CAAEC,KAAMH,IACnCpB,OAAOkB,OAAOM,wBAAwB,CAAEC,MAAOJ,GACjD,CAnBIK,CAAoBX,EAAQN,YAGP,iBAAnBM,EAAQG,OAIV,OAHAlB,OAAOM,QAAQC,MAAMC,IAAI,CAAC,cAAcmB,KAAMC,IAC5CX,EAAa,CAAER,UAAWmB,EAAOnB,YAAa,OAEzC,IAeXT,OAAOC,QAAQ4B,UAAU1B,YAAY,KACnCQ,QAAQC,IAAI","sources":["webpack://focus/./src/background.js"],"sourcesContent":["// Initialize focus mode state when extension is installed\nchrome.runtime.onInstalled.addListener(async () => {\n    try {\n      const result = await chrome.storage.local.get([\"focusMode\"])\n      if (result.focusMode === undefined) {\n        await chrome.storage.local.set({ focusMode: false })\n        console.log(\"Focus Mode initialized to OFF\")\n      }\n    } catch (error) {\n      console.error(\"Error initializing focus mode:\", error)\n    }\n  })\n  \n  // Listen for messages from popup or content scripts\n  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.action === \"focusModeChanged\") {\n      console.log(\"Focus Mode changed to:\", message.focusMode)\n  \n      // Update the extension icon\n      updateExtensionIcon(message.focusMode)\n    }\n  \n    if (message.action === \"getFocusMode\") {\n      chrome.storage.local.get([\"focusMode\"]).then((result) => {\n        sendResponse({ focusMode: result.focusMode || false })\n      })\n      return true // Keep message channel open for async response\n    }\n  })\n  \n  // Update extension icon based on focus mode state\n  function updateExtensionIcon(isOn) {\n    const badgeText = isOn ? \"ON\" : \"\"\n    const badgeColor = isOn ? \"#e74c3c\" : \"#27ae60\"\n  \n    // Set badge text and color\n    chrome.action.setBadgeText({ text: badgeText })\n    chrome.action.setBadgeBackgroundColor({ color: badgeColor })\n  }\n  \n  // Keep service worker alive\n  chrome.runtime.onStartup.addListener(() => {\n    console.log(\"Focus Mode extension started\")\n  })\n"],"names":["chrome","runtime","onInstalled","addListener","async","undefined","storage","local","get","focusMode","set","console","log","error","onMessage","message","sender","sendResponse","action","isOn","badgeText","badgeColor","setBadgeText","text","setBadgeBackgroundColor","color","updateExtensionIcon","then","result","onStartup"],"sourceRoot":""}